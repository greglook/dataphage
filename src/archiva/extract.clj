(ns archiva.stage
  "Persistent staging areas are where raw extracted data is preserved. This
  allows for later changes to the parsing code and multiple integration attempts
  without needing to re-query the original source."
  (:require
    [clojure.tools.logging :as log]
    [com.stuartsierra.component :as component]))


; /home/greg/data/source-data/withings/
;   <2015-06-25-00000-crunchy-dog>/
;     meta.edn
;     <type>/
;       <record-pk>
;       <record-pk>
;       ...
;   ...


(defprotocol ExtractionSource
  "This protocol defines the API for a source of extracted data. Each extraction
  event is defined as a _job_ with some configuration parameters. Common job
  parameters include:

  - `after`  Fetch records occurring at or after this time.
  - `before` Fetch records occurring at or before this time."

  (select-job
    [source store]
    "Selects parameters for the next job based on the current state of
    extracted data.")

  (extract-data
    [source store params]
    "Extracts data from this source, saving it to the given data store. Params
    may be generated by `select-job`."))


(defprotocol ExtractedDataStore
  "Protocol for a file store that implements a Persistent Staging Area (PSA) for
  extraction jobs."

  (list-jobs
    [store opts]
    "List some basic data about the stored extraction jobs.")

  (create-job
    [store job]
    "Create a new job to be populated by files. Returns the job's id.")

  (get-job
    [store job-id]
    "Load a specific job and a list of the extracted files.")

  (add-file
    [store job-id file-path source]
    "Write a new file to a job. Source should be a string, byte array, or
    `InputStream`.")

  (open-file
    [store job-id file-path]
    "Open a specific file for a job and return an `InputStream` with the
    contents."))
